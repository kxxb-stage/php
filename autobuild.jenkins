#!groovy
// Update nginx config on preprod
properties([disableConcurrentBuilds()])

pipeline {
    agent { label 'master' }
	triggers { pollSCM('* * * * *') }
	options {
		buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
	}
    stages {
		stage("Preparations") {
			steps {
				deleteDir() /* clean up our workspace */
			}
		}
        stage("Pull repositories") {
            steps {
				script {
					echo "-------------========== Current Branch Name: $BRANCH_NAME =============--------------"
					dir ('infra') {
						git(
						    url: 'git@github.com:kxxb-stage/infra.git',
							credentialsId: 'kxxb_git',
							branch: 'master'
						)
					}
					echo " -------------========== Выкачана ветка master репозитория infra =============--------------"		
					dir ('infra/ansible/roles/Add_context/files/php') {
						git(
						    url: 'git@github.com:kxxb-stage/php.git',
							credentialsId: 'kxxb_git',
							branch: '$BRANCH_NAME'
					    )
					}
					echo " -------------========== Выкачана ветка  $BRANCH_NAME репозитория php =============--------------"					
				}
            }
        }
        stage("Restart nginx") {
            steps {
				script {
					echo "-------------========== Запускается роль установки на сервер =============--------------"
					dir ('infra') {
						ansiblePlaybook(
							playbook: 'ansible/nginx_add_domain.yaml',
							inventory: 'ansible/inventory/hosts',
							extras: '-e "target=nginx branch=$BRANCH_NAME"'
						)
					}
				}
			}
        }
    }
	post {
		failure {
			echo "-------------========== Шеф, все пропало =============--------------"
		}
		aborted {
			echo "-------------========== Задача прервана =============--------------"
		}
		success {
			echo "-------------========== Готово: http://2bcrm.ru/$BRANCH_NAME =============--------------"
		}
	}
}